{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "stringData": {
      "type": "string",
      "defaultValue": "one, two, three"
    },
    "jsonFormattedData": {
      "type": "string",
      "defaultValue": "{'one': 'a', 'two': 'c'}"
    },
    "arrayToTest": {
      "type": "array",
      "defaultValue": [
        "one",
        "two",
        "three"
      ]
    },
    "stringToTest": {
      "type": "string",
      "defaultValue": "One Two Three"
    },
    "objectToTest": {
      "type": "object",
      "defaultValue": {
        "propA": "one",
        "propB": "two",
        "propC": "three",
        "propD": {
          "propD-1": "sub",
          "propD-2": "sub"
        }
      }
    },
    "greeting": {
      "type": "string",
      "defaultValue": "Hello"
    },
    "name": {
      "type": "string",
      "defaultValue": "User"
    },
    "numberToFormat": {
      "type": "int",
      "defaultValue": 8175133
    },
    "testString": {
      "type": "string",
      "defaultValue": "    one two three   "
    },
    "firstString": {
      "type": "string",
      "defaultValue": "one,two,three"
    },
    "secondString": {
      "type": "string",
      "defaultValue": "one;two,three"
    }
  
  },
  "variables": {
    "base64String": "[base64(parameters('stringData'))]",
    "base64Object": "[base64(parameters('jsonFormattedData'))]",
    "uriFormat": "[uri('http://contoso.com/resources/', 'nested/azuredeploy.json')]",
    "uriEncoded": "[uriComponent(variables('uriFormat'))]",
    "delimiters": [ ",", ";" ]    
  },
  "resources": [
{
  "name" : "[concat('Name','2')]",
  "location": "[contains(parameters('stringData'), 'e')]",
   "properties": {
    "andExampleOutput": {
        "type": "bool",
        "value": "[and(bool('true'), bool('false'))]"
      },
      "orExampleOutput": {
        "type": "bool",
        "value": "[or(bool('true'), bool('false'))]"
      },
      "notExampleOutput": {
        "type": "bool",
        "value": "[not(bool('true'))]"
      },
      "yesOutput": {
        "type": "string",
        "value": "[if(equals('a', 'a'), 'yes', 'no')]"
      },
      "falseOutput": {
        "type": "bool",
        "value": "[false()]"
      },
      "trueOutput": {
        "type": "bool",
        "value": "[true()]"
      }
    
}
}
]
}
